{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-4a5b-8c7d-9e8f7a6b5c4d",
    "name": "ToquePlay API V3 (Mercado Pago + Mock)",
    "description": "Cole칞칚o para testar a API Toque Play com sistema de pagamentos PIX (Mercado Pago real e mock).",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "tournamentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "paymentId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "游댢 Setup & Configuration",
      "item": [
        {
          "name": "1. Check Payment Mode Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/payments/mock/status",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "mock", "status"]
            },
            "description": "Verifica se o sistema est치 em modo mock ou real. Use este endpoint para confirmar a configura칞칚o antes de testar."
          },
          "response": []
        }
      ],
      "description": "Configura칞칚o inicial e verifica칞칚o do modo de pagamento."
    },
    {
      "name": "游댏 Authentication",
      "item": [
        {
          "name": "2. Register User (Email/Password)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test-user-1@example.com\",\n    \"password\": \"password123\",\n    \"displayName\": \"Test User\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Cria um novo usu치rio e o loga automaticamente, retornando os dados do perfil e um token de acesso. Copie o token para a vari치vel {{authToken}}."
          },
          "response": []
        },
        {
          "name": "3. Social Login (Get Token)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"idToken\": \"PASTE_YOUR_FIREBASE_ID_TOKEN_HERE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/social-login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "social-login"]
            },
            "description": "Use o arquivo `get_firebase_token.html` para gerar um token de ID do Firebase (via Google, etc.) e cole aqui. Isso ir치 criar ou logar o usu치rio."
          },
          "response": []
        },
        {
          "name": "4. Validate Token (Get Current User)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Valida o token do Firebase e retorna as informa칞칫es do usu치rio autenticado. Use este endpoint para verificar se o token ainda 칠 v치lido e obter dados atualizados do usu치rio."
          },
          "response": []
        }
      ],
      "description": "Endpoints para criar e autenticar usu치rios."
    },
    {
      "name": "游녻 Users",
      "item": [
        {
          "name": "5. Set User Profiles",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"profiles\": [\"ATHLETE\", \"ORGANIZATION\"]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/profiles",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profiles"]
            },
            "description": "Define os perfis de um usu치rio. Requer um token de autentica칞칚o. Use o token retornado pelo registro ou login. Perfis dispon칤veis: `ATHLETE`, `ORGANIZATION`, `CLUB`."
          },
          "response": []
        },
        {
          "name": "6. Set PIX Key (Organizer)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"pixKey\": \"organizador@pix.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/pix-key",
              "host": ["{{baseUrl}}"],
              "path": ["users", "pix-key"]
            },
            "description": "Cadastra a chave PIX do organizador para receber pagamentos. Requer autentica칞칚o com perfil ORGANIZATION."
          },
          "response": []
        }
      ],
      "description": "Endpoints para gerenciar dados do usu치rio."
    },
    {
      "name": "游끥 Tournaments",
      "item": [
        {
          "name": "7. Create Tournament (With PIX Payment)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Copa de Ver칚o ToquePlay\",\n  \"description\": \"Torneio de ver칚o na praia\",\n  \"numberOfTeams\": 16,\n  \"pricePerPerson\": 50,\n  \"date\": \"2024-12-21T10:00:00.000Z\",\n  \"categories\": {\n    \"MALE\": {\n      \"DOUBLES\": { \"enabled\": true, \"teamSize\": 2, \"price\": 50.00 },\n      \"QUARTETS\": { \"enabled\": true, \"teamSize\": 4, \"price\": 80.00 },\n      \"SIXES\": { \"enabled\": false, \"teamSize\": 6, \"price\": 100.00 }\n    },\n    \"FEMALE\": {\n      \"DOUBLES\": { \"enabled\": true, \"teamSize\": 2, \"price\": 50.00 },\n      \"QUARTETS\": { \"enabled\": false, \"teamSize\": 4, \"price\": 80.00 },\n      \"SIXES\": { \"enabled\": false, \"teamSize\": 6, \"price\": 100.00 }\n    },\n    \"MIXED\": {\n      \"DOUBLES\": { \"enabled\": true, \"teamSize\": 2, \"price\": 60.00 },\n      \"QUARTETS\": { \"enabled\": true, \"teamSize\": 4, \"price\": 90.00 },\n      \"SIXES\": { \"enabled\": false, \"teamSize\": 6, \"price\": 120.00 }\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/tournaments",
              "host": ["{{baseUrl}}"],
              "path": ["tournaments"]
            },
            "description": "Cria um novo torneio e automaticamente gera um pagamento PIX para a taxa de publica칞칚o. Copie o tournamentId da resposta para usar nos pr칩ximos endpoints."
          },
          "response": []
        },
        {
          "name": "8. List Open Tournaments (For Athletes)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tournaments",
              "host": ["{{baseUrl}}"],
              "path": ["tournaments"]
            },
            "description": "Lista apenas torneios ABERTOS (com pagamento aprovado) para atletas se inscreverem. Torneios pendentes de pagamento N츾O aparecem aqui."
          },
          "response": []
        },
        {
          "name": "9. List Organizer's Tournaments (All Status)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tournaments/organizer/my-tournaments",
              "host": ["{{baseUrl}}"],
              "path": ["tournaments", "organizer", "my-tournaments"]
            },
            "description": "Lista TODOS os torneios do organizador (incluindo pendentes de pagamento). Requer autentica칞칚o com perfil ORGANIZATION."
          },
          "response": []
        },
        {
          "name": "10. Register a Team",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"teamName\": \"Os Vingadores da Areia\",\n    \"gender\": \"MALE\",\n    \"modality\": \"DOUBLES\",\n    \"cpf\": \"111.111.111-11\",\n    \"members\": [\n        {\n            \"name\": \"Nome do Parceiro\",\n            \"email\": \"parceiro@exemplo.com\",\n            \"cpf\": \"222.222.222-22\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/tournaments/{{tournamentId}}/register-team",
              "host": ["{{baseUrl}}"],
              "path": ["tournaments", "{{tournamentId}}", "register-team"]
            },
            "description": "Registra um time em um torneio. Requer autentica칞칚o com um usu치rio que tenha o perfil `ATHLETE`. O `tournamentId` deve ser pego da resposta da cria칞칚o ou listagem de torneios."
          },
          "response": []
        },
        {
          "name": "11. Get Tournament Registrations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/payments/tournament/{{tournamentId}}/registrations",
              "host": ["{{baseUrl}}"],
              "path": [
                "payments",
                "tournament",
                "{{tournamentId}}",
                "registrations"
              ]
            },
            "description": "Lista todas as inscri칞칫es de um torneio com status de pagamento."
          },
          "response": []
        }
      ],
      "description": "Endpoints para gerenciar torneios e inscri칞칫es."
    },
    {
      "name": "游눱 Payments (PIX)",
      "item": [
        {
          "name": "12. Create PIX Payment",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 100.0,\n  \"description\": \"Inscri칞칚o no torneio\",\n  \"orderId\": \"tournament-123\",\n  \"payerEmail\": \"comprador@email.com\",\n  \"payerFirstName\": \"Jo칚o\",\n  \"payerLastName\": \"Silva\",\n  \"payerCpf\": \"12345678901\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/payments/pix",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "pix"]
            },
            "description": "Cria um pagamento PIX. Copie o paymentId da resposta para usar nos pr칩ximos endpoints."
          },
          "response": []
        },
        {
          "name": "13. Get Payment Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/payments/status/{{paymentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "status", "{{paymentId}}"]
            },
            "description": "Consulta o status de um pagamento espec칤fico."
          },
          "response": []
        },
        {
          "name": "14. List All Payments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/payments/list",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "list"]
            },
            "description": "Lista todos os pagamentos. Pode filtrar por status e orderId usando query parameters."
          },
          "response": []
        },
        {
          "name": "15. Webhook (Simulate)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"payment\",\n  \"data\": {\n    \"id\": {{paymentId}}\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/payments/webhook",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "webhook"]
            },
            "description": "Simula um webhook do Mercado Pago. Use o paymentId de um pagamento criado anteriormente."
          },
          "response": []
        }
      ],
      "description": "Endpoints para gerenciar pagamentos PIX."
    },
    {
      "name": "游꿠 Mock Mode (Development Only)",
      "item": [
        {
          "name": "16. List Mock Payments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/payments/mock/payments",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "mock", "payments"]
            },
            "description": "Lista todos os pagamentos mock criados. S칩 funciona em modo mock."
          },
          "response": []
        },
        {
          "name": "17. Approve Mock Payment",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/payments/mock/approve/{{paymentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "mock", "approve", "{{paymentId}}"]
            },
            "description": "Aprova manualmente um pagamento mock. S칩 funciona em modo mock. Use o paymentId de um pagamento criado anteriormente."
          },
          "response": []
        }
      ],
      "description": "Endpoints espec칤ficos para desenvolvimento e testes em modo mock."
    }
  ]
}
